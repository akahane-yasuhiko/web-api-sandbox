openapi: 3.0.1
info:
  title: User Manage Sample
  description: 'This is a sample server Petstore server.'
  termsOfService: http://swagger.io/terms/
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: http://localhost:8080
tags:
- name: user
  description: Operations about user
- name: role
  description: Operations about role
- name: operation
  description: Operations about operation
- name: device
  description: Operations about device
- name: user-role
  description: Operations about user and role relationships
- name: role-operation
  description: Operations about role and operation relationships
- name: user-device
  description: Operations about user and device relationships
paths:
  /user:
    post:
      tags:
      - user
      summary: Create user
      operationId: createUser
      requestBody:
        description: Created user object  TODO https://stackoverflow.com/questions/1860645/create-request-with-post-which-response-codes-200-or-201-and-content
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UserRegist'
        required: true
      responses:
        201:
          description: Created
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedMessage'
        400:
          description: Bad Request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
      - user
      summary: Get users
      operationId: getUsers
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
        400:
          description: Bad Request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  # /login:
  #   get:
  #     tags:
  #     - user
  #     summary: (Not implemented)Logs user into the system
  #     operationId: loginUser
  #     parameters:
  #     - name: user_id
  #       in: query
  #       description: The user name for login
  #       required: true
  #       schema:
  #         type: string
  #     - name: password
  #       in: query
  #       description: The password for login in clear text
  #       required: true
  #       schema:
  #         type: string
  #     responses:
  #       200:
  #         description: successful operation
  #         headers:
  #           X-Rate-Limit:
  #             description: calls per hour allowed by the user
  #             schema:
  #               type: integer
  #               format: int32
  #           X-Expires-After:
  #             description: date in UTC when token expires
  #             schema:
  #               type: string
  #               format: date-time
  #         content:
  #           application/json:
  #             schema:
  #               type: string
  #       400:
  #         description: Invalid user_id/password supplied
  #         content: {}
  # /logout:
  #   get:
  #     tags:
  #     - user
  #     summary: (Not implemented)Logs out current logged in user session
  #     operationId: logoutUser
  #     responses:
  #       default:
  #         description: successful operation
  #         content: {}
  /user/{user_id}:
    get:
      tags:
      - user
      summary: Get user by ID
      operationId: getUserById
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Bad Request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
      - user
      summary: Update user by ID
      operationId: updateUserById
      parameters:
      - name: user_id
        in: path
        description: user ID
        required: true
        schema:
          type: string
      requestBody:
        description: Updated user object
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Bad Request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
    delete:
      tags:
      - user
      summary: Delete user by ID
      operationId: deleteUserById
      parameters:
      - name: user_id
        in: path
        description: user ID
        required: true
        schema:
          type: string
      responses:
        204:
          description: No content
        400:
          description: Bad Request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /role:
    post:
      tags:
      - role
      summary: Create role
      operationId: createRole
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        201:
          description: Created
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedMessage'
        400:
          description: Bad Request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
      - role
      summary: Get all role
      operationId: getRole
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleList'
        400:
          description: Bad Request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /role/{role_id}:
    get:
      tags:
      - role
      summary: Get role by role ID
      operationId: getRoleById
      parameters:
      - name: role_id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        400:
          description: Bad Request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
      - role
      summary: Update role by ID
      operationId: updateRoleById
      parameters:
      - name: role_id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        400:
          description: Bad Request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
      - role
      summary: Delete role by ID
      operationId: deleteRoleById
      parameters:
      - name: role_id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: No content
        400:
          description: Bad Request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /operation:
    post:
      tags:
      - operation
      summary: Create operation
      operationId: createOperation
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Operation'
        required: true
      responses:
        201:
          description: Created
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedMessage'
        400:
          description: Bad Request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
      - operation
      summary: Get all operation
      operationId: getOperation
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationList'
        400:
          description: Bad Request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /operation/{operation_id}:
    get:
      tags:
      - operation
      summary: Get operation by ID
      operationId: getOperationById
      parameters:
      - name: operation_id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
        400:
          description: Bad Request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
      - operation
      summary: Update operation
      operationId: updateOperation
      parameters:
      - name: operation_id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Operation'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
        400:
          description: Bad Request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
      - operation
      summary: Delete operation
      operationId: deleteOperation
      parameters:
      - name: Operationname
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: No content
        400:
          description: Bad Request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

        404:
          description: Not found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /device:
    post:
      tags:
      - device
      summary: Create device
      operationId: createDevice
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Device'
        required: true
      responses:
        201:
          description: Created
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedMessage'
        400:
          description: Bad Request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /device/{device_token}:
    get:
      tags:
      - device
      summary: Get device by device token
      operationId: getOperationByName
      parameters:
      - name: device_token
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceList'
        400:
          description: Bad Request
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
      - device
      summary: Update device
      operationId: updateOperation
      parameters:
      - name: device_token
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Operation'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
        400:
          description: Invalid user supplied
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
      - device
      summary: Delete device
      operationId: deleteOperation
      parameters:
      - name: Operationname
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: No content
        400:
          description: Invalid user supplied
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user-role/{user_id}:
    get:
      tags:
      - user-role
      summary: Get user-role relationships by user ID
      operationId: getUserRoleByName
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupRole'
        400:
          description: Invalid user_id supplied
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user-role/{user_id}/{role_id}:
    put:
      tags:
      - user-role
      summary: Create user and role relationsip
      operationId: createUserRole
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
      - name: role_id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: successful operation
        400:
          description: Invalid user_id or role_id supplied
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
      - user-role
      summary: Delete user and role relationship
      operationId: deleteUserRole
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
      - name: role_id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: successful operation
        400:
          description: Invalid user_id or role_id supplied
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /role-operation/{role_id}:
    get:
      tags:
      - role-operation
      summary: Get role-operation relationships by role ID
      operationId: getRoleOperationByName
      parameters:
      - name: role_id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleOperation'
        400:
          description: Invalid role_id supplied
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /role-operation/{role_id}/{operation_id}:
    put:
      tags:
      - role-operation
      summary: Create role and operation relationsip
      operationId: createRoleOperation
      parameters:
      - name: role_id
        in: path
        required: true
        schema:
          type: string
      - name: operation_id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: successful operation
        400:
          description: Invalid role_id or operation_id supplied
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
      - role-operation
      summary: Delete role and operation relationship
      operationId: deleteUserRole
      parameters:
      - name: role_id
        in: path
        required: true
        schema:
          type: string
      - name: operation_id
        in: path
        required: true
        schema:
          type: string
      responses:
        204:
          description: successful operation
        400:
          description: Invalid user_id or role_id supplied
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        404:
          description: Not found
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal Server Error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    UserRegist:
      type: object
      properties:
        user_name:
          type: string
          maxLength: 256
          minLength: 1
        description:
          type: string
          maxLength: 2048
      required:
        - "user_name"
    User:
      type: object
      properties:
        user_id:
          type: string
          format: string
          maxLength: 32
          minLength: 32
        user_name:
          type: string
          maxLength: 256
          minLength: 1
        description:
          type: string
          maxLength: 2048
      required:
        - "user_id"
        - "user_name"
    UserList:
      type: array
      items:
        $ref: '#/components/schemas/User'
    Role:
      type: object
      properties:
        role_id:
          type: string
          format: string
          maxLength: 32
          minLength: 32
        role_name:
          type: string
          format: string
          maxLength: 256
          minLength: 1
        description:
          type: string
          maxLength: 2048
      required:
        - "role_id"
        - "role_name"
    RoleList:
      type: array
      items:
        $ref: '#/components/schemas/Role'
    Operation:
      type: object
      properties:
        operation_id:
          type: string
          format: string
          maxLength: 32
          minLength: 32
        operation_name:
          type: string
          maxLength: 256
          minLength: 1
        description:
          type: string
          maxLength: 2048
      required:
        - "operation_id"
        - "operation_name"
    OperationList:
      type: array
      items:
        $ref: '#/components/schemas/Operation'
    Device:
      type: object
      properties:
        device_token:
          type: string
          format: string
        disp_name:
          type: string
          format: string
      required:
        - "device_token"
        - "disp_name"
    DeviceList:
      type: array
      items:
        $ref: '#/components/schemas/Device'
    UserGroupRole:
      type: object
      properties:
        user_id:
          type: string
          format: string
          maxLength: 36
          minLength: 36
        group_id:
          type: string
          format: string
          maxLength: 36
          minLength: 36
        role_id:
          type: string
          format: string
          maxLength: 8
          minLength: 8
      required:
        - "user_id"
        - "group_id"
        - "role_id"
    UserGroupRoleList:
      type: array
      items:
        $ref: '#/components/schemas/UserGroupRole'
    RoleOperation:
      type: object
      properties:
        role_id:
          type: string
          format: string
          maxLength: 32
          minLength: 32
        operation_id:
          type: string
          format: string
          maxLength: 32
          minLength: 32
      required:
        - "role_id"
        - "operation_id"
    RoleOperationList:
      type: array
      items:
        $ref: '#/components/schemas/RoleOperation'
    CreatedUrl:
      type: object
      properties:
        resource_url:
          type: string
          format: string
          maxLength: 2048
      required:
        - "resource_url:"
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
          format: string
          maxLength: 8
          minLength: 8
        message:
          type: string
          maxLength: 2024
          minLength: 1
    UserDevice:
      type: object
      properties:
        user_id:
          type: string
          format: string
          maxLength: 32
          minLength: 32
        device_token:
          type: string
          format: string
      required:
        - "user_id"
        - "device_token"
    UserDeviceList:
      type: array
      items:
        $ref: '#/components/schemas/UserDevice'
    CreatedMessage:
      type: object
      properties:
        location:
          type: string
          format: string
        message:
          type: string
          format: string
      required:
        - "location"
        - "message"
  # securitySchemes:
  #   petstore_auth:
  #     type: oauth2
  #     flows:
  #       implicit:
  #         authorizationUrl: http://petstore.swagger.io/oauth/dialog
  #         scopes:
  #           write:pets: modify pets in your account
  #           read:pets: read your pets
  #   api_key:
  #     type: apiKey
  #     name: api_key
  #     in: header
